<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>v1.7.0 on Longhorn Manual Test Cases</title>
    <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/</link>
    <description>Recent content in v1.7.0 on Longhorn Manual Test Cases</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency setup for GKE cluster using Container-Optimized OS as base image</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-gke-container-optimized-os-dependency-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-gke-container-optimized-os-dependency-setup/</guid>
      <description>Related issues https://github.com/longhorn/longhorn/issues/6165 Test step Given GKE cluster using Continer-Optimized OS (COS_CONTAINER) as the base image.&#xA;When Follow instruction to deploy the Longhorn GKE COS node agent.&#xA;Then Follow the instruction to verify dependency configuration/setup.&#xA;And Integration tests should pass.</description>
    </item>
    <item>
      <title>restarting Kubelet should not result in repeated &#34;no Pending workload pods ...&#34; event for the workload pod.</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-kubelet-restart-no-pending-pod-event/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-kubelet-restart-no-pending-pod-event/</guid>
      <description>Related issues https://github.com/longhorn/longhorn/issues/8072 Test step Given A deployment is created.&#xA;When Kubelet on the node with attached volume of the deployment is restarted.&#xA;systemctl restart k3s-agent.service Then Observe the events of the deployment pod.&#xA;kubectl get events --field-selector involvedObject.name=${POD_NAME} -w And There are no recurring no Pending workload pods for volume xxx to be mounted events.</description>
    </item>
    <item>
      <title>Support bundle node collection timeout</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-support-bundle-node-collection-timeout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-support-bundle-node-collection-timeout/</guid>
      <description>When the timeout expires, the support bundle generation will proceed without requiring the collection of node bundles.&#xA;Related issues https://github.com/longhorn/longhorn/issues/8623 Test support bundle image supports node collection timeout Given Run the support bundle manager image (version 0.0.38 or later) using Docker.&#xA;&amp;gt; docker run -it longhornio/support-bundle-kit:v0.0.38 bash When Execute support-bundle-kit manager --help.&#xA;Then The help menu displays the --node-timeout option.&#xA;&amp;gt; support-bundle-kit manager --help | grep node-timeout --node-timeout duration The support bundle node collection time out Test support-bundle-node-collection-timeout setting Given Simulate the node bundle blockage by patching the rancher/support-bundle-kit code base and create an image.</description>
    </item>
    <item>
      <title>System Packages Are Up-to-date During Image Build</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-build-image-package-up-to-date/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.7.0/test-build-image-package-up-to-date/</guid>
      <description>Related issues https://github.com/longhorn/longhorn/issues/8721 Test step Given Build Longhorn component images manually.&#xA;longhorn-cli longhorn-engine longhorn-instance-manager longhorn-share-manager longhorn-ui When Run a shell within Longhorn component images using Docker.&#xA;docker run --entrypoint bash --user root -it &amp;lt;IMAGE&amp;gt; And Execute zypper ref &amp;amp;&amp;amp; zypper update command inside the container.&#xA;Then Verify that the command outputs Nothing to do.&#xA;&amp;gt; zypper ref &amp;amp;&amp;amp; zypper update Refreshing service &amp;#39;container-suseconnect-zypp&amp;#39;. Retrieving repository &amp;#39;SLE_BCI&amp;#39; metadata ...............................................................................................................[done] Building repository &amp;#39;SLE_BCI&amp;#39; cache .</description>
    </item>
  </channel>
</rss>
