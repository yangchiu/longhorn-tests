def imageName = "${JOB_BASE_NAME}-${env.BUILD_NUMBER}"
def summary
def BUILD_TRIGGER_BY = "\n${currentBuild.getBuildCauses()[0].shortDescription}"

// define optional parameters
def SELINUX_MODE = params.SELINUX_MODE ? "SELINUX_MODE=${params.SELINUX_MODE}" : ""


node {

    checkout scm

    stage('build') {
        sh "test_framework/scripts/build.sh"

        sh """ docker run -itd --name ${JOB_BASE_NAME}-${BUILD_NUMBER} \
                               ${imageName}
        """
    }

    try {
        timeout(60) {
            stage ('terraform') {
                sh  "echo 'dummy terraform setup ...'"
                sh  "echo 'dummy terraform setup ...'"
                sh  "echo 'dummy terraform setup completed!'"
            }
        }

        stage ('longhorn setup & tests') {
            sh  "echo 'dummy longhorn setup ...'"
            sh  "echo 'dummy longhorn setup ...'"
            sh  "echo 'dummy longhorn setup completed!'"
        }

        stage ('longhorn tests') {
            sh  " docker exec ${JOB_BASE_NAME}-${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/longhorn-test.sh"
        }

        stage ('report generation') {
            sh "docker cp ${JOB_BASE_NAME}-${BUILD_NUMBER}:${TF_VAR_tf_workspace}/longhorn-test-junit-report.xml ."

            if(params.LONGHORN_UPGRADE_TEST) {
                sh "docker cp ${JOB_BASE_NAME}-${BUILD_NUMBER}:${TF_VAR_tf_workspace}/longhorn-test-upgrade-junit-report.xml ."
                summary = junit 'longhorn-test-upgrade-junit-report.xml, longhorn-test-junit-report.xml'
            }
            else {
                 summary = junit 'longhorn-test-junit-report.xml'
            }
        }

    } catch(e) {
        currentBuild.result = "FAILED"
        throw e
    } finally {
        stage('releasing resources') {
            sh "docker rm -v ${JOB_BASE_NAME}-${BUILD_NUMBER}"
            sh "docker rmi ${imageName}"
            if(summary){
                summary_msg = "\nTest Summary - Failures: ${summary.failCount}, Skipped: ${summary.skipCount}, Passed: ${summary.passCount}  -- Job completed in ${currentBuild.durationString.replace(' and counting', '')}"
            }
            else{
                summary_msg = "\n Test Failed: No Junit report"
            }
        }
    }
}
